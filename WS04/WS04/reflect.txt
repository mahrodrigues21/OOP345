In WS04, we can observe the composition between Reservation and ConfirmationSender. The ConfirmationSender has a kind of a composer Reservation (has-a). On the declaration class, there is an array "kind of Reservation" type. It means the ConfirmationSender depends on the Reservation module to build their module. Aggregation is when one object doesn't depend on another to exist, and the aggregator doesn't do life manager,  like a relationship between Reservation and Restaurant. Restaurant knows about Reservation but can exist without it. Association is like a uses-a, only some dependency between two objects. This WS04, I spent some time figuring out why my output was wrong, like printing the object's address and not the value of the object.  I also had difficulty building the functions of ConfirmationSender and Restaurant, and the class group told me about the rule of 5. 